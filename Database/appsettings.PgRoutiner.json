/* PgRoutiner (3.11.1.0) settings */
{
  /* see https://github.com/vb-consulting/PgRoutiner/wiki/10.-WORKING-WITH-CONNECTIONS for more info */
  "ConnectionStrings": {
    //"Connection1": "Server={server};Db={database};Port={port};User Id={user};Password={password};"
    //"Connection2": "postgresql://{user}:{password}@{server}:{port}/{database}"
  },
  /* see https://github.com/vb-consulting/PgRoutiner/wiki/1.-WORKING-WITH-SETTINGS for more info */
  "PgRoutiner": {

    /*
      General settings:
      - Use "-c" or "--connection" option to set working connection from the command line.
      - Use "-sch" or "--schema-similar-to" option to set schema similar to expression from the command line.
      - Use "-x" or "--execute" option to execute SQL file or PSQL command on your current connection  from the command line.
      - Use "-d" or "--dump" switch to redirect all outputs to the command line.
    */
    "Connection": "DatabaseConnection",
    "SkipConnectionPrompt": false,
    "DumpPgCommands": true,
    "SchemaSimilarTo": null,
    "SchemaNotSimilarTo": null,
    "Execute": null,
    "Dump": false,
    "SkipIfExists": [],
    "SkipUpdateReferences": true,
    "PgDump": "pg_dump",
    "PgDumpFallback": null,
    "ConfigPath": "../PDDWebApp/",

    /*
      Code generation general settings. Used in:
      - Routines code generation.
      - CRUD code generation.
    */
    "Namespace": null,
    "UseRecords": false,
    "UseExpressionBody": false,
    "UseFileScopedNamespaces": true,
    "UseNullableStrings": true,
    "Mapping": {
      "text": "string",
      "character": "string",
      "xml": "string",
      "inet": "string",
      "daterange": "TimeSpan",
      "double precision": "double",
      "boolean": "bool",
      "smallint": "short",
      "timestamp with time zone": "DateTime",
      "timestamp without time zone": "DateTime",
      "bigint": "long",
      "time with time zone": "DateTime",
      "time without time zone": "DateTime",
      "char": "string",
      "date": "DateTime",
      "numeric": "decimal",
      "character varying": "string",
      "jsonb": "string",
      "real": "float",
      "json": "string",
      "integer": "int",
      "bpchar": "string",
      "float8": "double",
      "bool": "bool",
      "int2": "short",
      "timestamptz": "DateTime",
      "int8": "long",
      "timetz": "DateTime",
      "time": "DateTime",
      "varchar": "string",
      "float4": "float",
      "int4": "int",
      "uuid": "string"
    },
    "CustomModels": {},
    "ModelDir": "./Models/",
    "ModelCustomNamespace": null,
    "EmptyModelDir": true,
    "SkipSyncMethods": false,
    "SkipAsyncMethods": false,
    "MinNormVersion": "5.2.1",
    "SourceHeaderLines": [
      "#pragma warning disable CS8632",
      "// pgroutiner auto-generated code"
    ],
    "Ident": 4,
    "ReturnMethod": "SingleOrDefault",
    "MethodParameterNames": {
      "string": "@string",
      "int": "@int",
      "bool": "@bool",
      "void": "@void",
      "public": "@public",
      "private": "@private",
      "protected": "@protected",
      "class": "@class",
      "record": "@record",
      "enum": "@enum",
      "namespace": "@namespace",
      "using": "@using"
    },

    /*
      Routines data-access extensions code-generation
      - Use "-r" or "--routines" switch to run routines data-access extensions code-generation from the command line.
      - Use "-o" or "--output-dir" option to set the output dir for the generated code from the command line.
      - Use "-row" or "--routines-overwrite" switch to set the overwrite mode for the generated code from the command line.
      - Use "-md" or "--model-dir" option to set the custom models output dir for the generated code from the command line.
    */
    "Routines": false,
    "RoutinesSchemaSimilarTo": null,
    "RoutinesSchemaNotSimilarTo": null,
    "OutputDir": "./Extensions",
    "RoutinesEmptyOutputDir": true,
    "RoutinesOverwrite": false,
    "RoutinesAskOverwrite": false,
    "RoutinesNotSimilarTo": null,
    "RoutinesSimilarTo": null,
    "RoutinesReturnMethods": {},
    "RoutinesModelPropertyTypes": {},
    "RoutinesUnknownReturnTypes": [
      "json",
      "jsonb",
      "text",
      "varchar"
    ],
    "RoutinesCallerInfo": true,

    /*
      Unit tests code-generation settings
      - Use "-ut" or "--unit-tests" switch to run unit tests code-generation from the command line.
      - Use "-utd" or "--unit-tests-dir" option to set the output dir for the generated unit test project from the command line.
    */
    "UnitTests": false,
    "UnitTestProjectTargetFramework": "net6.0",
    "UnitTestProjectLangVersion": null,
    "UnitTestsDir": "../{0}Tests",
    "UnitTestsAskRecreate": false,
    "UnitTestsSkipSyncMethods": false,
    "UnitTestsSkipAsyncMethods": false,

    /*
      Schema dump script settings
      - Use "-sd" or "--schema-dump" switch to run schema script dump from the command line.
      - Use "-sdf" or "--schema-dump-file" option to set generated schema file name from the command line.
      - Use "-scow" or "--schema-dump-overwrite" switch to set the overwrite mode for the generated schema file from the command line.
      - Use "--schema-dump-privileges" switch to include object privileges in schema file from the command line.
    */
    "SchemaDump": false,
    "SchemaDumpFile": "./Scripts/schema.sql",
    "SchemaDumpOverwrite": true,
    "SchemaDumpAskOverwrite": false,
    "SchemaDumpOwners": false,
    "SchemaDumpPrivileges": false,
    "SchemaDumpNoDropIfExists": false,
    "SchemaDumpOptions": null,
    "SchemaDumpNoTransaction": false,

    /*
      Data dump script settings
      - Use "-dd" or "--data-dump" switch to run data script dump from the command line.
      - Use "-ddf" or "--data-dump-file" option to set generated data script file name from the command line.
      - Use "-ddow" or "--data-dump-overwrite" switch to set the overwrite mode for the generated data script file from the command line.
    */
    "DataDump": false,
    "DataDumpFile": "./Scripts/data.sql",
    "DataDumpOverwrite": true,
    "DataDumpAskOverwrite": false,
    "DataDumpTables": [
      "business_areas",
      "business_roles",
      "countries",
      "users",
      "employee_status",
      "business_role_types" 
    ],
    "DataDumpOptions": null,
    "DataDumpNoTransaction": false,

    /*
      Object file tree settings
      - Use "-db" or "--db-objects" switch to run object files tree dump from the command line.
      - Use "-dbd" or "--db-objects-dir" option to set the root output dir from the command line.
      - Use "-dbow" or "--db-objects-overwrite" switch to set the overwrite mode for the generated files from the command line.
    */
    "DbObjects": false,
    "DbObjectsDir": "./Scripts/",
    "DbObjectsOverwrite": true,
    "DbObjectsAskOverwrite": false,
    "DbObjectsDirNames": {
      "Tables": "tables/{0}",
      "Views": "views/{0}",
      "Functions": "functions/{0}",
      "Procedures": "procedures/{0}",
      "Domains": "domains/{0}",
      "Types": "types/{0}",
      "Schemas": "schemas",
      "Sequences": "sequences/{0}"
    },
    "DbObjectsSkipDeleteDir": false,
    "DbObjectsRemoveExistingDirs": false,
    "DbObjectsOwners": false,
    "DbObjectsPrivileges": false,
    "DbObjectsDropIfExists": true,
    "DbObjectsCreateOrReplace": true,
    "DbObjectsRaw": false,

    /*
      Markdown (MD) database dictionaries settings
      - Use "-md" or "--markdown" switch to run markdown (MD) database dictionary file from the command line.
      - Use "-mdf" or "--md-file" option to set generated dictionary file name from the command line.
      - Use "-cc" or "--commit-md" switch to run commit changes in comments from the MD file back to the database from the command line.
    */
    "Markdown": false,
    "MdFile": "./README.md",
    "MdSchemaSimilarTo": null,
    "MdSchemaNotSimilarTo": null,
    "MdOverwrite": true,
    "MdAskOverwrite": false,
    "MdSkipRoutines": false,
    "MdSkipViews": false,
    "MdSkipEnums": false,
    "MdNotSimilarTo": null,
    "MdSimilarTo": null,
    "MdIncludeSourceLinks": true,
    "MdIncludeExtensionLinks": true,
    "MdSourceLinkRoot": "/Database/",
    "MdIncludeTableCountEstimates": true,
    "MdIncludeTableStats": true,
    "MdRoutinesFirst": true,
    "MdExportToHtml": false,
    "CommitMd": false,

    /*
      PSQL command-line utility settings
      - Use "-psql" or "--psql" switch to open PSQL command-line utility from the command line.
    */
    "Psql": false,
    "PsqlTerminal": "wt",
    "PsqlCommand": "psql",
    "PsqlFallback": null,
    "PsqlOptions": null,

    /*
      Diff scripts settings
      - Use "-diff" or "--diff" switch to run diff script generation from the command line.
      - Use "-diff-target" or "--diff-target" option to set target connection for the diff script generator from the command line.
    */
    "Diff": false,
    "DiffTarget": null,
    "DiffFilePattern": "./Scripts/{0}-{1}/{2}-diff-{3:yyyyMMdd}.sql",
    "DiffPgDump": "pg_dump",
    "DiffPrivileges": false,
    "DiffSkipSimilarTo": "pg_%",

    /*
      CRUD scripts settings
      - Use "-crud" or "--crud" switch to run CRUD extension methods generation from the command line.
      - Use "-crud-o" or "--crud-output-dir" option to set the custom models output dir for the generated CRUD extension methods code from the command line.
    */
    "Crud": false,
    "CrudOutputDir": "./Extensions/{0}/",
    "CrudEmptyOutputDir": false,
    "CrudOverwrite": false,
    "CrudAskOverwrite": false,
    "CrudNoPrepare": false,
    "CrudReturnMethods": {},
    "CrudCreate": [],
    "CrudCreateReturning": [],
    "CrudCreateOnConflictDoNothing": [],
    "CrudCreateOnConflictDoNothingReturning": [],
    "CrudCreateOnConflictDoUpdate": [],
    "CrudCreateOnConflictDoUpdateReturning": [],
    "CrudReadBy": [],
    "CrudReadAll": [],
    "CrudUpdate": [],
    "CrudUpdateReturning": [],
    "CrudDeleteBy": [],
    "CrudDeleteByReturning": []
  }
}
